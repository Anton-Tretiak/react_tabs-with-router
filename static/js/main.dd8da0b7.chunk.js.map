{"version":3,"sources":["components/NavBar/NavBar.tsx","components/HomePage/HomePage.tsx","components/TabsNavigation/TabsNavigation.tsx","components/TabsPage/TabsPage.tsx","components/ErrorPage/ErrorPage.tsx","App.tsx","index.tsx"],"names":["NavBar","className","to","isActive","classNames","HomePage","TabsNavigation","tabs","activeTabId","activeTab","find","tab","id","map","title","content","TabsPage","tabId","useParams","ErrorPage","App","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"gPAGaA,EAAS,kBACpB,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UACE,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAChB,cACA,CAAE,YAAaD,KALrB,kBAWA,cAAC,IAAD,CACED,GAAG,QACHD,UACE,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAChB,cACA,CAAE,YAAaD,KALrB,0BCrBKE,EAAW,kBACtB,oBAAIJ,UAAU,QAAd,wBCQWK,EAAkC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAChDC,EAAYF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,KAE9C,OACE,qCACE,qBAAKP,UAAU,gBAAf,SACE,6BACGM,EAAKM,KAAI,SAACF,GACT,OACE,oBACE,UAAQ,MACRV,UAAWG,IACT,CAAE,YAAaO,EAAIC,KAAOJ,IAH9B,SAME,cAAC,IAAD,CAAMN,GAAE,gBAAWS,EAAIC,IAAvB,SAA8BD,EAAIG,iBAO5C,qBAAKb,UAAU,QAAQ,UAAQ,aAA/B,SACIQ,GAAcA,EAAUM,SAAa,4BC7BzCR,EAAO,CACX,CAAEK,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,gBAG7BC,EAAW,WACtB,IAAQC,EAAUC,cAAVD,MAER,OACE,qCACE,oBAAIhB,UAAU,QAAd,uBAEA,cAAC,EAAD,CAAgBM,KAAMA,EAAMC,YAAaS,QChBlCE,EAAY,kBACvB,oBAAIlB,UAAU,QAAd,6BCSWmB,EAAM,kBACjB,qCACE,cAAC,EAAD,IAEA,qBAAKnB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUpB,GAAG,IAAIqB,SAAO,MAEpD,eAAC,IAAD,CAAOF,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAGhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,iBCrBnCG,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dd8da0b7.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const NavBar = () => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={\n            ({ isActive }) => classNames(\n              'navbar-item',\n              { 'is-active': isActive },\n            )\n          }\n        >\n          Home\n        </NavLink>\n        <NavLink\n          to=\"/tabs\"\n          className={\n            ({ isActive }) => classNames(\n              'navbar-item',\n              { 'is-active': isActive },\n            )\n          }\n        >\n          Tabs\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  activeTabId: string | undefined;\n};\n\nexport const TabsNavigation: React.FC<Props> = ({ tabs, activeTabId }) => {\n  const activeTab = tabs.find(tab => tab.id === activeTabId);\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            return (\n              <li\n                data-cy=\"Tab\"\n                className={classNames(\n                  { 'is-active': tab.id === activeTabId },\n                )}\n              >\n                <Link to={`/tabs/${tab.id}`}>{tab.title}</Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {(activeTab && (activeTab.content)) || 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { TabsNavigation } from '../TabsNavigation/TabsNavigation';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage = () => {\n  const { tabId } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <TabsNavigation tabs={tabs} activeTabId={tabId} />\n    </>\n  );\n};\n","export const ErrorPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { NavBar } from './components/NavBar/NavBar';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { TabsPage } from './components/TabsPage/TabsPage';\nimport { ErrorPage } from './components/ErrorPage/ErrorPage';\n\nexport const App = () => (\n  <>\n    <NavBar />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"tabs\">\n            <Route index element={<TabsPage />} />\n            <Route path=\":tabId\" element={<TabsPage />} />\n          </Route>\n\n          <Route path=\"*\" element={<ErrorPage />} />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}